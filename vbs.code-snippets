{
    //VBSCRIPT - Snippets For Visual Studio Code 
    "Abs": {"scope": "vbscript","prefix": "Abs", "body": ["Abs(${1:number})"],"description": "Return Absolute"},
    "Array": {"scope": "vbscript","prefix": "Array", "body": ["Array(${1:value1,value2….})"],"description": "Add values to an Array variable"},
    "Arguments": {"scope": "vbscript","prefix": "Arguments", "body": ["Set ${1:objArgs} = Wscript.Arguments"],"description": "Get Cmd Line Args into Object [Object has .item(x) .count and .length ]"},
    "Asc": {"scope": "vbscript","prefix": "Asc", "body": ["Asc(\"${1:character}\")"],"description": "Return ASCII Number of 1st Character"},
    "AscW": {"scope": "vbscript","prefix": "AscW", "body": ["AscW(\"${1:character}\")"],"description": "Return UNICODE Number of Character"},
    "Cdate": {"scope": "vbscript","prefix": "Cdate", "body": ["Cdate(\"${1:date as string}\")"],"description": "Convert String to Date"},
    "Cdbl": {"scope": "vbscript","prefix": "Cdbl", "body": ["Cdbl(${1:value or expression})"],"description": "Convert value or expression to double \"100\" 100*10 NOT \"100*10\""},
    "Chr": {"scope": "vbscript","prefix": "Chr", "body": ["Chr(${1:value0-255})"],"description": "Returns Ascii eg. 65 returns A"},
    "ChrW": {"scope": "vbscript","prefix": "ChrW", "body": ["ChrW(${1:value})"],"description": "Returns UNICODE eg. 65 returns A"},
    "Date": {"scope": "vbscript","prefix": "Date", "body": ["Date"],"description": "Returns Current Date"},
    "DateAdd": {"scope": "vbscript","prefix": "DateAdd", "body": ["DateAdd (\"${1|yyyy,q,m,y,d,w,h,n,s|}\",${2:increment number},${3:DateToAddTo})"],"description": "Returns Amended Date"},
    "DateSerial": {"scope": "vbscript","prefix": "DateSerial", "body": ["DateSerial (${1:YearNo}, ${2:MonthNo}, ${3:DayNo})"],"description": "Returns Date From Y M D as separate numbers"},
    "Day": {"scope": "vbscript","prefix": "Day", "body": ["Day(${1:Date})"],"description": "Returns Day From Date"},
    "DoWhile": {"scope": "vbscript","prefix": "DoWhile", "body": ["Do While ${1:Condition}\n\t${2:'Statements}\n'Exit Do\nLoop$0"],"description": "Do While Also Use [(Do Until) (Loop)],[(Do) (Loop Until)],[(Do) (Loop While)]"},
    "Exit": {"scope": "vbscript","prefix": "Exit", "body": ["Exit ${1|Do,For,Function,Property,Sub|}"],"description": "Exit Do,For,Function,Property or Sub"},
    "FileSystemObject": {"scope": "vbscript","prefix": "FileSystemObject", "body": ["Set ${1:objectName} = CreateObject(\"Scripting.FileSystemObject\")"],"description": "Create Scripting.FileSystemObject"},
    "FileSystemObject.": {"scope": "vbscript","prefix": "FileSystemObject.", "body": ["FilesystemObject${1|.BuildPath(strPath\\,strFileName),.CopyFile(Source\\, Dest [\\,Overwrite (True/False)]),.CopyFolder(Source\\, Dest [\\,Overwrite (True/False)]),.CreateFolder(Path),.CreateTextFile(FileName [\\,Overwrite (True/False) [\\, Unicode (True/False)]]),.DeleteFile(FileSpec\\, Force (True/False)),.DeleteFolder(FileSpec\\, Force (True/False)),.DriveExists(strDrive),.FileExists(strFile),.FolderExists(strFolder),.GetAbsolutePathName(strPath),.GetBaseName(strPath),.GetDrive(strDrive),.GetDriveName(strDrive),.GetExtensionName(strPath),.GetFile(strPath),.GetFileName(strPath),.GetFolder(strPath),.GetParentFolderName(strPath),.GetSpecialFolderName(FolderType),.GetStandardStream(Type [\\,Unicode (True/False)]),.GetTempName(),.MoveFile(Source\\, Dest),.MoveFolder(Source\\, Dest),.OpenTextFile(strFile \\,IOMode 8=append 1=Read 2=Write \\,Create True/False \\,Format 0=Ascii -1=Unicode -2=default)|}"],"description": "FileSystemObject. Options"},
    "MsgBox": {"scope": "vbscript","prefix": "MsgBox", "body": ["${1:VarX} = MsgBox(\"${2:MessageText}\",${3|vbOKOnly,vbOKCancel,vbAbortRetryIgnore,vbYesNoCancel,vbYesNo,vbRetryCancel|},\"${4:title}\")\n$0"],"description": "Message Box  NB Remove () if No Return Value Required"},
    "Wscript.Echo": {"scope": "vbscript","prefix": "Wscript.Echo", "body": ["Wscript.Echo(\"${1:Text or Var[NB remove \"\"]} \")"],"description": "Write to Command Line"},
    "Wscript.Interactive": {"scope": "vbscript","prefix": "Wscript.Interactive", "body": ["Wscript.Interactive = ${1|true,false|}"],"description": "Set Interaction"}
    
    
}
